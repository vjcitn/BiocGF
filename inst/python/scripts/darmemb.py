
#!/usr/bin/env python
# coding: utf-8

# In[1]:

#%VC_JetS> ls -tl /media/volume/boot-vol-vince_12apr/*10dout_darm
#total 16
#drwxrwxr-x 3 exouser exouser 4096 Jul 10 14:53 240710_geneformer_cellClassifier_darmanis_test
#drwxrwxr-x 2 exouser exouser 4096 Jul 10 14:53 darmanis_test_labeled_train.dataset
#drwxrwxr-x 2 exouser exouser 4096 Jul 10 14:53 darmanis_test_labeled_test.dataset
#-rw-rw-r-- 1 exouser exouser  155 Jul 10 14:53 darmanis_test_id_class_dict.pkl

finepath = "/media/volume/boot-vol-vince_12apr/vjcjul10dout_darm/240710_geneformer_cellClassifier_darmanis_test/ksplit1"

filter_dat = {"cell.type":["oligodendrocytes", "hybrid", "astrocytes", "OPC", "microglia",
"neurons", "endothelial", "fetal_quiescent", "fetal_replicating"]}

from geneformer import EmbExtractor


# In[ ]:


# initiate EmbExtractor
embex = EmbExtractor(model_type="CellClassifier",
                     num_classes=9,
                     filter_data=filter_dat,
                     max_ncells=1000,
                     emb_layer=0,
                     emb_label=["tissue","cell.type"],
                     labels_to_plot=["tissue"],
                     forward_batch_size=100,
                     nproc=16)

# extracts embedding from input data
# input data is tokenized rank value encodings generated by Geneformer tokenizer (see tokenizing_scRNAseq_data.ipynb)
# example dataset: https://huggingface.co/datasets/ctheodoris/Genecorpus-30M/tree/main/example_input_files/cell_classification/disease_classification/human_dcm_hcm_nf.dataset


#>>> ds.load_from_disk(("h5adtoks.dataset")
#... 
#... )
#Dataset({
#    features: ['input_ids', 'batch', 'donor', 'n_counts', 'age', 'cell.type', 'tissue', 'chipid', 'length'],
#    num_rows: 466
#})
#>>> 
#%VC_JetS> pwd
#/home/exouser/newdarmtok


fine_tuned_path = finepath
#dataset_path = "/media/volume/boot-vol-vince_12apr/vjcjul10dout_darm/darmanis_test_labeled_train.dataset"
output_path = "/media/volume/boot-vol-vince_12apr/tryembo"
dataset_path = "/home/exouser/newdarmtok/h5adtoks.dataset"

embs = embex.extract_embs(fine_tuned_path,
                          dataset_path,
                          output_path,
                          "demo_darm")


# In[4]:


# plot UMAP of cell embeddings
# note: scanpy umap necessarily saves figs to figures directory
embex.plot_embs(embs=embs, 
                plot_style="umap",
                output_directory=output_path,
                output_prefix="emb_plot")


# In[5]:


# plot heatmap of cell embeddings
embex.plot_embs(embs=embs, 
                plot_style="heatmap",
                output_directory=output_path,
                output_prefix="emb_plot")






